:PROPERTIES:
:ID:       230f4439-3115-4a66-a5b3-fc21eec05705
:END:
#+title: js-oop-proxy
#+filetags: :js:
#+date: [2024-07-11 四]
#+last_modified: [2024-07-11 四 22:14]


*Index*
- [[id:28170442-90cc-4cf9-a3d3-28ab203e8ff7][js-oop-proxy-reflect]]
- [[id:75f73805-a37b-4d1f-928c-41e23c249e86][js-oop-proxy-revocable proxy]]
- [[id:14793e5f-a44c-4061-bc2a-f43daf0979b9][js-oop-proxy-this]]
- [[id:88b22c59-6ce9-4168-8d96-115d6a73c7b2][js-oop-proxy-inner prop]]
- [[id:4b2ec3c3-847a-4c39-91d5-a823fe089077][js-oop-proxy-trapper]]
- [[id:b411a7d3-8aa9-4c7b-a064-83f97fd1e0f2][js-oop-proxy-model]]

  
#+NAME: empty-handler
#+BEGIN_SRC js :noweb yes :results output
let target = {
  id: 1
}

let handler ={}

let proxy = new Proxy(target, handler)

console.log(proxy.id)
console.log(proxy.id === target.id)

proxy.id = 2
console.log(target.id)

console.log(target.hasOwnProperty('id'))
console.log(proxy.hasOwnProperty('id'))

console.log(proxy.__proto__)
console.log(target.__proto__)

console.log(proxy === target)
#+END_SRC

#+RESULTS:
: 1
: true
: 2
: true
: true
: [Object: null prototype] {}
: [Object: null prototype] {}
: false




#+BEGIN_SRC js :noweb yes :results output

let target = {
  id: 1
}

let handler ={
  get(){
    return "get overwrite"
  }
}


let proxy =  new Proxy(target, handler)

console.log(proxy.id)
console.log(proxy['id'])
console.log(Object.create(proxy)['id'])
#+END_SRC

#+RESULTS:
: get overwrite
: get overwrite
: get overwrite




#+BEGIN_SRC js :noweb yes :results output

let target = {
  id: 1
}

let handler ={
  get(trapTaget, prop, proxyObj){
    console.log(trapTaget === target)
    console.log(prop)
    console.log(proxyObj === proxy)
    return trapTaget[prop]
  }
}


let proxy =  new Proxy(target, handler)

console.log(proxy.id)
#+END_SRC

#+RESULTS:
: true
: id
: true
: 1


