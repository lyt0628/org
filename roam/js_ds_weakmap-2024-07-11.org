:PROPERTIES:
:ID:       e81b2754-320b-4fe1-b4ae-2e1f33579453
:END:
#+title: js-ds-WeakMap
#+filetags: :js:
#+date: [2024-07-11 四]
#+last_modified: [2024-07-11 四 22:14]


#+BEGIN_SRC js :noweb yes :results output
let wmp = new WeakMap()

const obj = {id:0}
const obj1 = {id:1}
const obj2 = {id:2}

let wmp1 = new WeakMap([
  [obj, "value0"],
  [obj1, "value1"],
  [obj2, "value2"]
])

console.log(wmp1.get(obj))
console.log(wmp1.get(obj1))
console.log(wmp1.get(obj2))
#+END_SRC

#+RESULTS:
: value0
: value1
: value2


#+BEGIN_SRC js :noweb yes :results output
let strObj = new String("objKey")
let wmp = new WeakMap([
  [strObj, "value"]
])
console.log(wmp.get(strObj))

let wmp1 = new WeakMap([
  ["strKey", "value"]
])
console.log(wmp1.get("strKey"))
#+END_SRC

#+RESULTS:
: value



#+BEGIN_SRC js :noweb yes :results output
let wmp = new WeakMap()

const obj = {id:0},
      obj1 = {id:1};

console.log(wmp.has(obj))
console.log(wmp.get(obj))

wmp.set(obj, "value")
   .set(obj1, "value1");

console.log(wmp.has(obj))
console.log(wmp.get(obj))

wmp.delete(obj)
console.log(wmp.has(obj))
console.log(wmp.get(obj))

#+END_SRC

#+RESULTS:
: false
: undefined
: true
: value
: false
: undefined


WeakMap will provent Value to be collect, but Key not.
If Js use ref-cnt to collect garbage, Weak Key ref to Value,
but WeakMap dont hold Key`s Ref
#+BEGIN_SRC js :noweb yes :results output
let wmp = new WeakMap({},"value")
#+END_SRC
Empty Obj hold Value`s Ref, but Obj` ref-count is 0, to be collected.
and value`s ref-cnt become 0, to be collected


#+NAME: use-WeakMap-to-hold-private-Prop
#+BEGIN_SRC js :noweb yes :results output

#+END_SRC

