:PROPERTIES:
:ID:       641b79b5-560b-41f5-ac8b-b77c63a8a9c7
:END:
#+title: js-3rd-jquery-DOM
#+date: [2024-08-07 三]
#+last_modified:  


* 插入Node

#+BEGIN_SRC html
  <ul id="list" class="panel">

    <li class="li-1">li-1</li>
    <li class="li-2">li-2</li>
    <li class="li-3">li-3</li>
    <li class="li-4">li-4</li>
    <li class="li-5">li-5</li>

  </ul>

  <<js-jq>>
  <script >

  <<pend3>>
  </script>
#+END_SRC



#+NAME: pend
#+BEGIN_SRC js
  $(function() {
    <<c#>>  Child
     $('ul').append('文本1')
     $('ul').prepend('文本2')

    <<c#>> subing
     $('ul').before('文本3')
     $('ul').after('文本4')

  })
#+END_SRC



* 各种插入元素的来源


#+NAME: pend2
#+BEGIN_SRC js
    $(function() {
       $('ul').append('文本')

       $('ul').append(`
         <li class="li-6">我是li-6</li>
       `)

      <<c#>>  插入的是jQuery对象
      var liEl = document.createElement('li')
      var $li = $('<li>').addClass('li-6').text('我是li-6')
      $('ul').append($li)

      <<c#>> 插入的是元素对象
       var liEl = document.createElement('li')
       liEl.className = 'li-6'
       liEl.innerText = '我是li-6'
       $('ul').append(liEl)

      <<c#>> 方式五: 选中页面上的元素插入到ul中
      $('ul').append( $('.li-6') ) // move, 不是clone

    })
#+END_SRC



* To方向的插入操作
#+NAME: pend3
#+BEGIN_SRC js
  $(function() {
   $('<li>')
    .addClass('li-6')
    .text('我是li-6')  // 创建一个li元素

    // .appendTo( $('ul') )
    // .prependTo( $('ul') )
    // .insertBefore( $('ul') )
    .insertAfter( $('ul') )

  })
  
#+END_SRC


* To插入的不同元素来源
#+BEGIN_SRC js
   $(function() {
     $('<li>')
      .addClass('li-6')
      .css('color', 'red')
      .text('我是li-6')  // 创建一个li元素(必须是一个jQuery对象)

      // 方式一: 支持 jQuery对象
      // .appendTo( $('ul') )

      // 方式二: 支持 字符串类型的选择器
      // .appendTo( 'ul' )

      // 方式三: 支持 元素对象
      .appendTo( document.querySelector('ul') )


      $('.li-7').appendTo('ul')  // append

    })
#+END_SRC






* 删除 API

#+BEGIN_SRC js
    // 1.监听文档完全解析完成
    $(function() {
      // 1.删除ul中的后代元素
      // $('ul').empty()

      // 2.删除ul 以及后代元素
      // $('ul').remove()
      
      // $('ul li').remove('字符串选择器')

      // $('ul li').remove('.li-1, .li-2') // 支持
      // $('ul li').remove(['.li-1', '.li-2'])  // 不支持

    })
#+END_SRC


* 元素克隆

#+BEGIN_SRC js
    // 1.监听文档完全解析完成
    $(function() {
      // 1.将li-6克隆到ul元素的尾部
      // var $newLi = $('.li-6').clone() // 属于克隆一个li元素
      // $newLi.appendTo('ul')

      // 简写
      // $('.li-6').clone().appendTo('ul')

      // 2.将li-6克隆到 ul元素的尾部( 将li-6的事件处理函数和data自定义属性一起拷贝过去 )
      $('.li-6')
        .data({
          name: 'liujun',
          age: '17'
        })
        .click(function() {
          console.log( 'li-6' )
        })
        // 开始克隆
        .clone(true)
        .appendTo('ul')
         
      console.log("%O", $('.li-6').get(0))
    })
#+END_SRC




